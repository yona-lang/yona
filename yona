#!/usr/bin/env bash

VERSION="0.8.2-SNAPSHOT"
EXPECTED_GRAALVM_VERSION='"21.2.0"'
TRUFFLE_VERSION="21.2.0"

MAIN_CLASS="yona.Launcher"
SCRIPT_HOME="$(cd "$(dirname "$0")" && pwd -P)"

#######################################################################
# Locations of the language and launcher jars as well as the java command are
# different if I'm running from the repository or as a component in GraalVM
#######################################################################
GRAALVM_VERSION=$(grep "GRAALVM_VERSION" "$SCRIPT_HOME/../release" 2>/dev/null)
if [[ "$GRAALVM_VERSION" != "" ]]; then
  LANGUAGE_PATH="$SCRIPT_HOME/../languages/yona/language/language.jar"
  LAUNCHER_PATH="$SCRIPT_HOME/../languages/yona/launcher/yona-launcher.jar"
  JAVACMD="$SCRIPT_HOME/java"
  GRAALVM_VERSION=$(echo "$GRAALVM_VERSION" | awk 'BEGIN {FS="="} {print $2}')
  if [[ "$GRAALVM_VERSION" != "$EXPECTED_GRAALVM_VERSION" ]]; then
    echo "Installed in wrong version of GraalVM. Expected: $EXPECTED_GRAALVM_VERSION, found $GRAALVM_VERSION"
    exit
  fi
else
  LANGUAGE_PATH="$SCRIPT_HOME/language/target/language.jar"
  LAUNCHER_PATH="$SCRIPT_HOME/launcher/target/yona-launcher.jar"
  # Check the GraalVM version in JAVA_HOME
  if [[ "$JAVA_HOME" != "" ]]; then
    GRAALVM_VERSION=$(grep "GRAALVM_VERSION" "$JAVA_HOME"/release)
    if [[ "$GRAALVM_VERSION" != "" ]]; then
      GRAALVM_VERSION=$(echo "$GRAALVM_VERSION" | awk 'BEGIN {FS="="} {print $2}')
      if [[ "$GRAALVM_VERSION" != "$EXPECTED_GRAALVM_VERSION" ]]; then
        echo "Wrong version of GraalVM in \$JAVA_HOME. Expected: $EXPECTED_GRAALVM_VERSION, found $GRAALVM_VERSION"
        exit
      fi
    fi
    JAVACMD=${JAVACMD:=$JAVA_HOME/bin/java}
    if [[ ! -f $LANGUAGE_PATH ]]; then
      echo "Could not find language on $LANGUAGE_PATH. Did you run mvn package?"
      exit
    fi
    if [[ ! -f $LAUNCHER_PATH ]]; then
      echo "Could not find launcher on $LAUNCHER_PATH. Did you run mvn package?"
      exit
    fi
  else
    echo "JAVA_HOME is not set"
    exit
  fi
fi

#######################################################################
# Parse arguments, prepare Java command and execute
#######################################################################
if [[ "$GRAALVM_VERSION" != "" ]]; then
  PROGRAM_ARGS=""
  JAVA_ARGS=""

  for opt in "$@"; do
    case $opt in
    -debug)
      JAVA_ARGS="$JAVA_ARGS -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y"
      ;;
    -dump)
      JAVA_ARGS="$JAVA_ARGS -Dgraal.Dump=Truffle:1 -Dgraal.TruffleBackgroundCompilation=false -Dgraal.TraceTruffleCompilation=true -Dgraal.TraceTruffleCompilationDetails=true"
      ;;
    -disassemble)
      JAVA_ARGS="$JAVA_ARGS -XX:CompileCommand=print,*OptimizedCallTarget.callRoot -XX:CompileCommand=exclude,*OptimizedCallTarget.callRoot -Dgraal.TruffleBackgroundCompilation=false -Dgraal.TraceTruffleCompilation=true -Dgraal.TraceTruffleCompilationDetails=true"
      ;;
    -J*)
      opt=${opt:2}
      JAVA_ARGS="$JAVA_ARGS $opt"
      ;;
    *)
      PROGRAM_ARGS="$PROGRAM_ARGS $opt"
      ;;
    esac
  done
  "$JAVACMD" $JAVA_ARGS -Dtruffle.class.path.append="$LANGUAGE_PATH" -cp "$LAUNCHER_PATH":"$JAVA_HOME/lib/graalvm/launcher-common.jar":"$JAVA_HOME/lib/truffle/truffle-dsl-processor.jar" "$MAIN_CLASS" $PROGRAM_ARGS
else
  echo "Warning: Could not find GraalVM on $JAVA_HOME. Running on JDK without support for compilation."
  echo
  PROGRAM_ARGS=""
  JAVA_ARGS=""

  for opt in "$@"; do
    case $opt in
    -debug)
      JAVA_ARGS="$JAVA_ARGS -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y"
      ;;
    -dump)
      echo "NOTE: Ignoring -dump, only supported on GraalVM."
      ;;
    -disassemble)
      echo "NOTE: Ignoring -disassemble"
      ;;
    -J*)
      opt=${opt:2}
      JAVA_ARGS="$JAVA_ARGS $opt"
      ;;
    *)
      PROGRAM_ARGS="$PROGRAM_ARGS $opt"
      ;;
    esac
  done
  if [[ ! -d $HOME/.m2 ]]; then
    echo "Could not find mvn cache at $HOME/.m2"
    exit
  fi
  GRAAL_SDK_PATH="$HOME/.m2/repository/org/graalvm/graal-sdk/sdk/$TRUFFLE_VERSION/graal-sdk-$TRUFFLE_VERSION.jar"
  GRAAL_LAUNCHER_PATH="$HOME/.m2/repository/org/graalvm/sdk/launcher-common/$TRUFFLE_VERSION/launcher-common-$TRUFFLE_VERSION.jar"
  TRUFFLE_API_PATH="$HOME/.m2/repository/org/graalvm/truffle/truffle-api/$TRUFFLE_VERSION/truffle-api-$TRUFFLE_VERSION.jar"
  ANTLR_PATH="$HOME/.m2/repository/org/antlr/antlr4-runtime/4.7.2/antlr4-runtime-4.7.2.jar"
  "$JAVACMD" -cp "$GRAAL_SDK_PATH":"$GRAAL_LAUNCHER_PATH":"$LAUNCHER_PATH":"$TRUFFLE_API_PATH":"$ANTLR_PATH" "$MAIN_CLASS" $PROGRAM_ARGS
fi
